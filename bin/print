#!/usr/bin/env python
#
#    Copyright (C) 2008  Gaudenz Steinlin <gaudenz@soziologie.ch>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
print - print rankings
"""

from tempfile import mkdtemp
from shutil import move, rmtree, copy
from optparse import OptionParser
from subprocess import call
import os, sys

from bosco.util import load_config
from bosco.course import Course
from bosco.formatter import MakoRankingFormatter
from bosco.run import Run
from bosco.runner import Category

if __name__ == '__main__':

    # load configuration
    conf = load_config()

    # Read program options
    opt = OptionParser(usage = 'usage: %prog [options] [outfile]', 
                       description = 'Produces ranking as a PDF file suitable for printing.')
    opt.add_option('-r', '--rankings', action='store', default=None,
                   help='Comma separted list of rankings to show.')
    opt.add_option('-l', '--list', action='store_true', default=False,
                   help='List all available rankings.')
    (options, args) = opt.parse_args()

    if len(args) > 1:
        print "Can't print to more than one file!"
        sys.exit(1)
        
    if options.list:
        print 'Available rankings:', 
        for (desc,r) in conf.event.list_rankings():
            print desc,
        print
        sys.exit()

    if options.rankings:
        ranking_codes = options.rankings.split(',')
        ranking_list = [ r for (desc,r) in conf.event.list_rankings() if desc in ranking_codes ]
    else:
        ranking_list = [ r for (desc,r) in conf.event.list_rankings() ]

    tempdir = mkdtemp()
    f = open(os.path.join(tempdir, 'print.tex'), 'wb')

    f.write(unicode(conf.event.format_ranking(ranking_list, type='print')).encode('utf-8'))

    f.close()

    orig_dir = os.getcwd()
    os.chdir(tempdir)
    call(['pdflatex','--interaction=batchmode', 'print.tex'])
    os.chdir(orig_dir)
    if len(args) == 1:
        move(os.path.join(tempdir, 'print.pdf'), args[0])
    elif len(args) == 0:
        f = open(os.path.join(tempdir, 'print.pdf'), 'rb')
        print f.read(),
        
    #rmtree(tempdir)
