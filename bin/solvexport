#!/usr/bin/env python
#
#    Copyright (C) 2008  Gaudenz Steinlin <gaudenz@soziologie.ch>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
solvexport - Export rankings for all courses in the SOLV ranking format
"""

import sys

from bosco.util import load_config, RankingFileOptionParser
from bosco.course import Course, CombinedCourse
from bosco.runner import Category
from bosco.formatter import CategorySOLVRankingFormatter, CourseSOLVRankingFormatter, RoundCountRankingFormatter, RelayCategorySOLVRankingFormatter
from bosco.run import Run

modes = {Category       : RelayCategorySOLVRankingFormatter,
         Course         : CourseSOLVRankingFormatter,
         CombinedCourse : CourseSOLVRankingFormatter,
         }

if __name__ == '__main__':

    # load configuration
    conf = load_config()

    # Read program options
    opt = RankingFileOptionParser(usage = 'usage: %prog [options] [outfile]',
                                  description = 'Produces a CSV file suitable for uploading to the SOLV Website.',
                                  event = conf.event)
    opt.add_option('-e', '--encoding', action='store', default='iso-8859-1',
                   help='Output encoding. This defaults to iso-8859-1 because the SOLV website is unable to handle more modern encodings.')

    (options, args, ranking_list, f) = opt.parse_args()

    if len(ranking_list) == 0:
        print "No ranking selected. Aborting."
        sys.exit(1)

    for r in ranking_list:
        f.write(str(modes[type(r.rankable)]([r], conf.starttime, options.encoding)))

    f.close()
