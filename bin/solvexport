#!/usr/bin/env python
#
#    Copyright (C) 2008  Gaudenz Steinlin <gaudenz@soziologie.ch>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
solvexport - Export rankings for all courses in the SOLV ranking format
"""

import sys
from optparse import OptionParser

from bosco.util import load_config
from bosco.course import Course
from bosco.runner import Category
from bosco.formatter import CategorySOLVRankingFormatter, CourseSOLVRankingFormatter, RoundCountRankingFormatter
from bosco.run import Run

modes = {'category'   : {'rankable': Category, 'formatter': CategorySOLVRankingFormatter},
         'course'     : {'rankable': Course,   'formatter': CourseSOLVRankingFormatter},
         'roundcount' : {'rankable': Category, 'formatter': RoundCountRankingFormatter},
         }

if __name__ == '__main__':

    # load configuration
    conf = load_config()

    # Read program options
    opt = OptionParser(usage = 'usage: %prog [options] [outfile]', 
                       description = 'Produces a CSV file suitable for uploading to the SOLV Website.')
    opt.add_option('-m', '--mode', action='store', default='category',
                   help='Output category, course or roundcount based rankings. Defaults to category.')
    (options, args) = opt.parse_args()

    if len(args) > 1:
        print "Can't write to more than one file!"
        sys.exit(1)


    if len(args) == 0:
        f = sys.stdout
    else:
        f = open(args[0], 'wb')

    courses = conf.store.find(modes[options.mode]['rankable'])
    f.write(str(modes[options.mode]['formatter']([conf.event.ranking(c) for c in courses],
                                     conf.starttime)))

    f.close()
